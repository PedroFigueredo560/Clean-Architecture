/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cleanarchitecture.usecase;

import com.mycompany.cleanarchitecture.usecase.LoginUseCase;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author Pedro Henrique
 */
public class LoginView extends javax.swing.JFrame {

    /**
     * Creates new form LoginView
     */
     public LoginView(LoginUseCase loginUseCase) {
        this.loginUseCase = loginUseCase;
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        String login = jTextField1.getText();
        String senha = String.valueOf(jPasswordField1.getPassword());

        boolean loginValido = loginUseCase.realizarLogin(login, senha);

        if (loginValido) {
            JOptionPane.showMessageDialog(null, "Bem Vindo!\nPrime - Sistema Comercial!",
                    "PRIME - Bem Vindo!", JOptionPane.INFORMATION_MESSAGE);
            String args[] = new String[1];
            args[0] = obterCodigoFuncionarioPorLogin(login);
            Menu.main(args);
            dispose();
        } else {
            tentativas++;
            if (tentativas < 3) {
                JOptionPane.showMessageDialog(null, "Usuário ou Senha Incorretos!\n" +
                        "Você tem mais " + (3 - tentativas) + " tentativa(s)",
                        "Atenção - Prime §oftware §ecurity", JOptionPane.ERROR_MESSAGE);
                limpaCampos();
            } else {
                JOptionPane.showMessageDialog(null, "ACESSO AO SISTEMA NEGADO!!\n" +
                        "Limite de tentativas excedidas!\n" +
                        "Contate o administrador do sistema.\n" +
                        "Para sua segurança o sistema será encerrado.",
                        "Atenção! Prime -§oftware §ecurity", JOptionPane.ERROR_MESSAGE);
                dispose();
            }
        }
    }
    private String obterCodigoFuncionarioPorLogin(String login) {
        Query query = entityManager.createNamedQuery("Funcionario.obterCodigoPorLogin");
        query.setParameter("loginFuncionario", login);

        List<Funcionario> data = query.getResultList();
        if (!data.isEmpty()) {
            return data.get(0).getCodFuncionario().toString();
        } else {
            return null;
        }
    }
}
